-- INVENTORY PROJECT --

-- CREATING NEW DATABASE 
CREATE DATABASE INVENTORY;
USE INVENTORY;

-- CREATING SUPPLIER TABLE
CREATE TABLE SUPPLIER(
SID_ CHAR(5) PRIMARY KEY,
SNAME VARCHAR(20) NOT NULL,
SADD VARCHAR(50) NOT NULL,
SCITY VARCHAR(30) DEFAULT 'DELHI',
SPHONE VARCHAR(13) UNIQUE,
EMAIL VARCHAR(50)
);

-- CREATING PRODUCT TABLE
CREATE TABLE PRODUCT(
PID CHAR(5) PRIMARY KEY,
PDESC VARCHAR(50) NOT NULL,
PRICE FLOAT CHECK(PRICE>0),
CATEGORY VARCHAR(5) CHECK(CATEGORY IN ('IT','HA','HC')),
SID_ CHAR(5) REFERENCES SUPPLIER(SID_)
);

-- CREATING STOCK TABLE
CREATE TABLE STOCK(
PID CHAR(5) REFERENCES PRODUCT(PID),
SQTY INT CHECK(SQTY>=0),
ROL INT CHECK(ROL>0),
MOQ INT CHECK (MOQ>=5)
);

-- CREATING CUST TABLE
CREATE TABLE CUST(
CID CHAR(5) PRIMARY KEY,
CNAME VARCHAR(30) NOT NULL,
ADDR VARCHAR(30) NOT NULL,
CITY VARCHAR(30) NOT NULL,
PHONE VARCHAR(13) NOT NULL,
EMAIL VARCHAR(30) NOT NULL,
DOB DATE CHECK (DOB<'1-JAN-2000')
);

-- CREATING ORDERS TABLE
CREATE TABLE ORDERS(
OID CHAR(5) PRIMARY KEY,
ODATE DATE,
PID CHAR(5) REFERENCES PRODUCT(PID),
CID CHAR(5) REFERENCES CUST(CID),
OQTY INT CHECK(OQTY>=1)
);



-- ENTERING DATA INTO SUPPLIERS TABLE 
INSERT INTO SUPPLIER (SID_, SNAME, SADD, SCITY, SPHONE, EMAIL) VALUES
('S0001', 'ABC Suppliers', '123 Main St', 'DELHI', '555-555-5555', 'abc@example.com'),
('S0002', 'XYZ Suppliers', '456 Oak St', 'MUMBAI', '555-555-5556', 'xyz@example.com'),
('S0003', 'PQR Suppliers', '789 Elm St', 'KOLKATA', '555-555-5557', 'pqr@example.com'),
('S0004', 'DEF Suppliers', '234 Maple St', 'DELHI', '555-555-5558', 'def@example.com'),
('S0005', 'GHI Suppliers', '567 Pine St', 'DELHI', '555-555-5559', 'ghi@example.com'),
('S0006', 'JKL Suppliers', '890 Cedar St', 'BANGALORE', '555-555-5560', 'jkl@example.com'),
('S0007', 'MNO Suppliers', '111 Chestnut St', 'DELHI', '555-555-5561', 'mno@example.com'),
('S0008', 'STU Suppliers', '222 Walnut St', 'CHENNAI', '555-555-5562', 'stu@example.com');

-- ENTERING DATA INTO PRODUCT TABLE
INSERT INTO PRODUCT (PID, PDESC, PRICE, CATEGORY, SID_)
VALUES
('P0001', 'Wireless Mouse', 15.99, 'IT', 'S0001'),
('P0002', 'USB Flash Drive', 29.99, 'IT', 'S0002'),
('P0003', 'Laptop Bag', 49.99, 'HA', 'S0003'),
('P0004', 'Gaming Mouse Pad', 9.99, 'IT', 'S0004'),
('P0005', 'Portable Hard Drive', 89.99, 'IT', 'S0005'),
('P0006', 'Wireless Keyboard', 34.99, 'IT', 'S0006'),
('P0007', 'USB Hub', 19.99, 'IT', 'S0007'),
('P0008', 'Noise-Cancelling Headphones', 199.99, 'HA', 'S0008'),
('P0009', 'Desktop Computer', 899.99, 'IT', 'S0001'),
('P0010', 'External SSD', 119.99, 'IT', 'S0002'),
('P0011', 'Printer', 149.99, 'IT', 'S0003'),
('P0012', 'Wireless Earbuds', 79.99, 'HA', 'S0004'),
('P0013', 'Monitor', 279.99, 'IT', 'S0005'),
('P0014', 'External Hard Drive', 109.99, 'IT', 'S0006'),
('P0015', 'Webcam', 39.99, 'IT', 'S0007'),
('P0016', 'Smartphone Case', 9.99, 'HA', 'S0008'),
('P0017', 'Gaming Keyboard', 49.99, 'IT', 'S0001'),
('P0018', 'Bluetooth Speaker', 69.99, 'HA', 'S0002');

-- ENTERING DATA INTO STOCK TABLE 
INSERT INTO STOCK (PID, SQTY, ROL, MOQ)
VALUES
('P0001', 50, 20, 10),
('P0002', 100, 50, 20),
('P0003', 30, 10, 5),
('P0004', 75, 30, 15),
('P0005', 20, 5, 5),
('P0006', 60, 25, 10),
('P0007', 45, 15, 10),
('P0008', 10, 5, 5),
('P0009', 25, 10, 5),
('P0010', 50, 20, 10);


-- ENTERING DATA INTO CUST TABLE 
INSERT INTO CUST (CID, CNAME, ADDR, CITY, PHONE, EMAIL, DOB)
VALUES
('C0001', 'Amit Sharma', '123 Gandhi Road', 'Mumbai', '91-9876543210', 'amit.sharma@gmail.com', '1995-02-15'),
('C0002', 'Priya Patel', '456 Patel Nagar', 'Ahmedabad', '91-9876543211', 'priya.patel@yahoo.com', '1993-07-01'),
('C0003', 'Sandeep Singh', '789 Ramjas Road', 'Delhi', '91-9876543212', 'sandeep.singh@gmail.com', '1994-12-10'),
('C0004', 'Kavita Sharma', '321 Malviya Nagar', 'Jaipur', '91-9876543213', 'kavita.sharma@yahoo.com', '1996-05-22'),
('C0005', 'Arun Kumar', '222 Park Street', 'Bangalore', '91-9876543214', 'arun.kumar@gmail.com', '1998-01-03'),
('C0006', 'Preeti Reddy', '444 Jubilee Hills', 'Hyderabad', '91-9876543215', 'preeti.reddy@yahoo.com', '1992-11-30'),
('C0007', 'Vikram Chauhan', '888 Patel Chowk', 'Pune', '91-9876543216', 'vikram.chauhan@gmail.com', '1991-08-12'),
('C0008', 'Anjali Das', '555 Lake Gardens', 'Kolkata', '91-9876543217', 'anjali.das@yahoo.com', '1997-03-28');

-- ENTERIG DATA INTO ORDERS TABLE 
INSERT INTO ORDERS (OID, ODATE, PID, CID, OQTY)
VALUES
('O0001', '2022-10-15', 'P0002', 'C0002', 2),
('O0002', '2022-10-16', 'P0001', 'C0005', 3),
('O0003', '2022-10-17', 'P0003', 'C0003', 1),
('O0004', '2022-10-18', 'P0004', 'C0001', 4),
('O0005', '2022-10-19', 'P0005', 'C0004', 2);


SELECT * FROM SUPPLIER;
SELECT * FROM PRODUCT;
SELECT * FROM ORDERS;
SELECT * FROM CUST;
SELECT * FROM STOCK;

DROP SEQUENCE MYSEQ;
DROP PROCEDURE ADDSUPPLIER;

CREATE SEQUENCE MYSEQ
AS INT
START WITH 9
INCREMENT BY 1
NO CYCLE;

CREATE PROCEDURE ADDSUPPLIER 
@SN AS VARCHAR(50),@SA AS VARCHAR(70),@SC AS VARCHAR(30),@SP AS VARCHAR(13),@EM AS VARCHAR(50)
AS
BEGIN
		DECLARE @SID AS CHAR(5);
		DECLARE @I AS INT;
		SET @I = (NEXT VALUE FOR MYSEQ);
		IF @I<10
				SET @SID = CONCAT('S000', @I);
		ELSE IF @I<100 
				SET @SID = CONCAT('S00', @I);
		ELSE IF @I<1000 
				SET @SID = CONCAT('S0', @I);
		ELSE IF @I<10000 
				SET @SID = CONCAT('S', @I);
		ELSE
				SET @SID = 'NA'		
		SET NOCOUNT ON;
		INSERT INTO SUPPLIER VALUES
		(@SID,@SN,@SA,@SC,@SP,@EM);

		SELECT * FROM SUPPLIER
		WHERE SID_ = @SID;

END;

ADDSUPPLIER'FLIPKART SUPPLIER','145,CYBER CITY','GURGAON','555-555-5564','FLIPKART@EXAMPLE.COM';

CREATE SEQUENCE MYSEQ2
AS INT
START WITH 20
INCREMENT BY 1
NO CYCLE;

DROP PROCEDURE ADDPRODUCT;
DROP SEQUENCE MYSEQ2;

CREATE PROCEDURE ADDPRODUCT
@PD AS VARCHAR(50),@PR AS FLOAT,@C AS CHAR(2),@S AS CHAR(5)
AS
BEGIN	
		DECLARE @PID AS CHAR(5);
		DECLARE @I AS INT;
		SET @I = (NEXT VALUE FOR MYSEQ2);
		IF @I<10
				SET @PID = CONCAT('P000', @I);
		ELSE IF @I<100 
				SET @PID = CONCAT('P00', @I);
		ELSE IF @I<1000 
				SET @PID = CONCAT('P0', @I);
		ELSE IF @I<10000 
				SET @PID = CONCAT('P', @I);
		ELSE
				SET @PID = 'NA'
		SET NOCOUNT ON;
		INSERT INTO PRODUCT VALUES
		(@PID,@PD,@PR,@C,@S);

		SELECT * FROM PRODUCT
		WHERE PID = @PID;

END;

ADDPRODUCT 'USB CONNECTOR','20.50','IT','S0009';

DROP PROCEDURE ADDORDER; 

CREATE SEQUENCE MYSEQ3
AS INT
START WITH 7
INCREMENT BY 1
NO CYCLE;

CREATE PROCEDURE ADDORDER 
@OD AS DATE,@P AS CHAR(5),@C AS CHAR(5),@OQ AS INT
AS
BEGIN	
		DECLARE @OID AS CHAR(5);
		DECLARE @I AS INT;
		SET @I = (NEXT VALUE FOR MYSEQ3);
		IF @I<10
				SET @OID = CONCAT('O000', @I);
		ELSE IF @I<100 
				SET @OID = CONCAT('O00', @I);
		ELSE IF @I<1000 
				SET @OID = CONCAT('O0', @I);
		ELSE IF @I<10000 
				SET @OID = CONCAT('O', @I);
		ELSE
				SET @OID = 'NA'
		SET NOCOUNT ON;
		INSERT INTO ORDERS VALUES
		(@OID,@OD,@P,@C,@OQ);

		SELECT * FROM ORDERS
		WHERE OID = @OID;

END;

ADDORDER '2022-11-20','P0007','C0005',8

CREATE SEQUENCE MYSEQ4
AS INT
START WITH 9
INCREMENT BY 1
NO CYCLE;

DROP PROCEDURE ADDCUST;

CREATE PROCEDURE ADDCUST 
@CN AS VARCHAR(50),@CA AS VARCHAR(70),@CC AS VARCHAR(30),@CP AS VARCHAR(13),@CEM AS VARCHAR(50),@DB AS DATE
AS
BEGIN	
		DECLARE @CID AS CHAR(5);
		DECLARE @I AS INT;
		SET @I = (NEXT VALUE FOR MYSEQ4);
		IF @I<10
				SET @CID = CONCAT('O000', @I);
		ELSE IF @I<100 
				SET @CID = CONCAT('O00', @I);
		ELSE IF @I<1000 
				SET @CID = CONCAT('O0', @I);
		ELSE IF @I<10000 
				SET @CID = CONCAT('O', @I);
		ELSE
				SET @CID = 'NA'
		SET NOCOUNT ON;
		INSERT INTO CUST VALUES
		(@CID,@CN,@CA,@CC,@CP,@CEM,@DB);

		SELECT * FROM CUST
		WHERE CID = @CID;

END;

-- INSERT TRIGGER FOR STOCK UPDATION AS PER NEW ORDER
CREATE TRIGGER TR_INVENT_UPDATE
ON ORDERS
FOR INSERT
AS 
BEGIN 
        SET NOCOUNT ON;
		UPDATE STOCK SET SQTY = SQTY - (SELECT OQTY FROM INSERTED)
		WHERE PID = (SELECT PID FROM INSERTED);
END;		 

-- DELETION TRIGGER FOR STOCK UPDATION AS PER PRODUCT DELETION 
CREATE TRIGGER TR_DEL_PRO
ON PRODUCT
FOR DELETE
AS 
BEGIN
		DELETE FROM STOCK
		WHERE PID = (SELECT PID FROM DELETED);
END;



CREATE TRIGGER TR_UP_ORD
ON ORDERS
FOR UPDATE
AS
BEGIN 
	DECLARE @OQ AS INT;
	DECLARE @NQ AS INT;

	SET @OQ = (SELECT OQTY FROM DELETED);
	SET @NQ= (SELECT OQTY FROM INSERTED);

	UPDATE STOCK SET SQTY = SQTY + @OQ - @NQ
	WHERE PID = (SELECT PID FROM INSERTED);

END;


CREATE TRIGGER TR_IN_ORD
ON ORDERS
FOR INSERT
AS
BEGIN
	declare @QR AS INT;
	DECLARE @QS AS INT;

	SET @QR = (SELECT OQTY FROM INSERTED);
	SET @QS = (SELECT SQTY FROM STOCK WHERE PID = (SELECT PID FROM INSERTED));

	IF @QS  >= @QR
		BEGIN
			UPDATE STOCK SET SQTY = SQTY - @QR
			WHERE PID = (SELECT PID FROM INSERTED);

			COMMIT;
		END;
	ELSE
		ROLLBACK;
END;


SELECT * FROM SUPPLIER;
SELECT * FROM PRODUCT;
SELECT * FROM ORDERS;
SELECT * FROM CUST;
SELECT * FROM STOCK;

